{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/auth';\nclass AuthService {\n  async login(data) {\n    const response = await axios.post(`${API_URL}/login`, data);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  }\n  async register(data) {\n    await axios.post(`${API_URL}/register`, data);\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  async getCurrentUser() {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No hay token de autenticación');\n    }\n    const response = await axios.get(`${API_URL}/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","data","response","post","token","localStorage","setItem","register","logout","removeItem","getCurrentUser","getItem","Error","get","headers","Authorization","getToken"],"sources":["C:/Project_ERP2/Frontend/src/services/auth.service.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/auth';\r\n\r\nexport interface LoginData {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport interface RegisterData {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    nombre: string;\r\n    apellido: string;\r\n}\r\n\r\nexport interface User {\r\n    id: number;\r\n    username: string;\r\n    email: string;\r\n    nombre: string;\r\n    apellido: string;\r\n    roles: string[];\r\n}\r\n\r\nexport interface AuthResponse {\r\n    token: string;\r\n    user: User;\r\n}\r\n\r\nclass AuthService {\r\n    async login(data: LoginData): Promise<AuthResponse> {\r\n        const response = await axios.post<AuthResponse>(`${API_URL}/login`, data);\r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n        }\r\n        return response.data;\r\n    }\r\n\r\n    async register(data: RegisterData): Promise<void> {\r\n        await axios.post(`${API_URL}/register`, data);\r\n    }\r\n\r\n    logout(): void {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    async getCurrentUser(): Promise<User> {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            throw new Error('No hay token de autenticación');\r\n        }\r\n\r\n        const response = await axios.get<User>(`${API_URL}/me`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    getToken(): string | null {\r\n        return localStorage.getItem('token');\r\n    }\r\n}\r\n\r\nexport default new AuthService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AA8BhD,MAAMC,WAAW,CAAC;EACd,MAAMC,KAAKA,CAACC,IAAe,EAAyB;IAChD,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAe,GAAGL,OAAO,QAAQ,EAAEG,IAAI,CAAC;IACzE,IAAIC,QAAQ,CAACD,IAAI,CAACG,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACD,IAAI,CAACG,KAAK,CAAC;IACtD;IACA,OAAOF,QAAQ,CAACD,IAAI;EACxB;EAEA,MAAMM,QAAQA,CAACN,IAAkB,EAAiB;IAC9C,MAAMJ,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,EAAEG,IAAI,CAAC;EACjD;EAEAO,MAAMA,CAAA,EAAS;IACXH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;EACpC;EAEA,MAAMC,cAAcA,CAAA,EAAkB;IAClC,MAAMN,KAAK,GAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACP,KAAK,EAAE;MACR,MAAM,IAAIQ,KAAK,CAAC,+BAA+B,CAAC;IACpD;IAEA,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAO,GAAGf,OAAO,KAAK,EAAE;MACpDgB,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUX,KAAK;MAClC;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACD,IAAI;EACxB;EAEAe,QAAQA,CAAA,EAAkB;IACtB,OAAOX,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACxC;AACJ;AAEA,eAAe,IAAIZ,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}