{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project_ERP2\\\\Frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const userData = await authService.getCurrentUser();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Error al inicializar la autenticación:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async (username, password) => {\n    const response = await authService.login({\n      username,\n      password\n    });\n    setUser(response.user);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  const register = async userData => {\n    await authService.register(userData);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initAuth","token","localStorage","getItem","userData","getCurrentUser","error","console","removeItem","login","username","password","response","logout","register","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project_ERP2/Frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport authService from '../services/auth.service';\r\n\r\ninterface User {\r\n    id: number;\r\n    username: string;\r\n    email: string;\r\n    nombre: string;\r\n    apellido: string;\r\n    roles: string[];\r\n}\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    loading: boolean;\r\n    login: (username: string, password: string) => Promise<void>;\r\n    logout: () => void;\r\n    register: (userData: any) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const initAuth = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    const userData = await authService.getCurrentUser();\r\n                    setUser(userData);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al inicializar la autenticación:', error);\r\n                localStorage.removeItem('token');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        initAuth();\r\n    }, []);\r\n\r\n    const login = async (username: string, password: string) => {\r\n        const response = await authService.login({ username, password });\r\n        setUser(response.user);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    const register = async (userData: any) => {\r\n        await authService.register(userData);\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        login,\r\n        logout,\r\n        register,\r\n    };\r\n\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBnD,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAGV,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAIF,KAAK,EAAE;UACP,MAAMG,QAAQ,GAAG,MAAMpB,WAAW,CAACqB,cAAc,CAAC,CAAC;UACnDR,OAAO,CAACO,QAAQ,CAAC;QACrB;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9DJ,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;MACpC,CAAC,SAAS;QACNT,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IACxD,MAAMC,QAAQ,GAAG,MAAM5B,WAAW,CAACyB,KAAK,CAAC;MAAEC,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAChEd,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACjBX,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCX,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMiB,QAAQ,GAAG,MAAOV,QAAa,IAAK;IACtC,MAAMpB,WAAW,CAAC8B,QAAQ,CAACV,QAAQ,CAAC;EACxC,CAAC;EAED,MAAMW,KAAK,GAAG;IACVnB,IAAI;IACJE,OAAO;IACPW,KAAK;IACLI,MAAM;IACNC;EACJ,CAAC;EAED,oBAAO5B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAAEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF,CAAC;AAACzB,GAAA,CA9CWF,YAAqD;AAAA4B,EAAA,GAArD5B,YAAqD;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}